{"ast":null,"code":"var _jsxFileName = \"/Users/sean/repos/timetable/timetable/src/components/TodoList/TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Todo from \"./Todo.jsx\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoList({\n  user,\n  isMobile\n}) {\n  _s();\n\n  const [todoList, setTodoList] = useState([]);\n  useEffect(() => {\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    axios.get('http://localhost:5000/todos/611e92451c49a231f80a5709').then(response => {\n      setTodoList(response.data.reverse());\n      setTodoList(response.data.reverse().filter(todo => todo.createdAt > yesterday.toISOString()));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"todolist\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-4xl md:text-6xl\",\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), todoList.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n        todoId: todo._id,\n        updatedAt: todo.updatedAt,\n        createdAt: todo.createdAt,\n        todoText: todo.todoText,\n        isMobile: isMobile,\n        todoCompleted: todo.todoCompleted\n      }, todo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"hGGsNTuaOn7oyphipNa0xsYj1Yc=\");\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/sean/repos/timetable/timetable/src/components/TodoList/TodoList.jsx"],"names":["React","useState","useEffect","Todo","axios","TodoList","user","isMobile","todoList","setTodoList","yesterday","Date","setDate","getDate","get","then","response","data","reverse","filter","todo","createdAt","toISOString","map","_id","updatedAt","todoText","todoCompleted"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,QAAT,CAAmB;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAnB,EAAoC;AAAA;;AAC/C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AACAD,IAAAA,SAAS,CAACE,OAAV,CAAkBF,SAAS,CAACG,OAAV,KAAsB,CAAxC;AAEDT,IAAAA,KAAK,CAACU,GAAN,CAAU,sDAAV,EACMC,IADN,CACWC,QAAQ,IAAI;AACdP,MAAAA,WAAW,CAACO,QAAQ,CAACC,IAAT,CAAcC,OAAd,EAAD,CAAX;AACAT,MAAAA,WAAW,CAACO,QAAQ,CAACC,IAAT,CAAcC,OAAd,GAAwBC,MAAxB,CAA+BC,IAAI,IAAIA,IAAI,CAACC,SAAL,GAAiBX,SAAS,CAACY,WAAV,EAAxD,CAAD,CAAX;AACH,KAJN;AAKF,GATQ,EASN,EATM,CAAT;AAWA,sBACI;AAAA,2BACI;AAAS,MAAA,EAAE,EAAC,UAAZ;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKd,QAAQ,CAACe,GAAT,CAAaH,IAAI,iBAEd,QAAC,IAAD;AAAqB,QAAA,MAAM,EAAEA,IAAI,CAACI,GAAlC;AAAuC,QAAA,SAAS,EAAEJ,IAAI,CAACK,SAAvD;AAAkE,QAAA,SAAS,EAAEL,IAAI,CAACC,SAAlF;AAA6F,QAAA,QAAQ,EAAED,IAAI,CAACM,QAA5G;AAAsH,QAAA,QAAQ,EAAEnB,QAAhI;AAA0I,QAAA,aAAa,EAAEa,IAAI,CAACO;AAA9J,SAAWP,IAAI,CAACI,GAAhB;AAAA;AAAA;AAAA;AAAA,cAFH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA1BuBnB,Q;;KAAAA,Q","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Todo from \"./Todo.jsx\";\nimport axios from \"axios\";\n\nexport default function TodoList( {user, isMobile}){\n    const [todoList, setTodoList] = useState([]);\n\n    useEffect(() => {\n        const yesterday = new Date();\n        yesterday.setDate(yesterday.getDate() - 1);\n\n       axios.get('http://localhost:5000/todos/611e92451c49a231f80a5709') \n            .then(response => {\n                setTodoList(response.data.reverse());\n                setTodoList(response.data.reverse().filter(todo => todo.createdAt > yesterday.toISOString()));\n            });\n    }, []);    \n\n    return(\n        <div>\n            <section id=\"todolist\">\n                <h2 className=\"text-4xl md:text-6xl\">Today</h2>\n                {todoList.map(todo => (\n                    \n                    <Todo key={todo._id} todoId={todo._id} updatedAt={todo.updatedAt} createdAt={todo.createdAt} todoText={todo.todoText} isMobile={isMobile} todoCompleted={todo.todoCompleted}/>\n                ))}\n            </section>\n        </div>\n    );\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}