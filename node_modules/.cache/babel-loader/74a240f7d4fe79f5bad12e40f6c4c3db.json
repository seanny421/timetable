{"ast":null,"code":"var _jsxFileName = \"/Users/sean/repos/timetable/timetable/src/components/TodoList/OverdueList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Todo from \"./Todo.jsx\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OverdueList({\n  user,\n  isMobile\n}) {\n  _s();\n\n  const [todoList, setTodoList] = useState([]);\n  const [haveOverdue, setHaveOverdue] = useState(false);\n  useEffect(() => {\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    console.log(yesterday.toISOString());\n    axios.get('http://localhost:5000/todos/611e92451c49a231f80a5709').then(response => {\n      setTodoList(response.data.reverse().filter(todo => todo.createdAt < yesterday.toISOString() && todo.todoCompleted === false));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"todolist\",\n      children: [todoList.length > 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-4xl md:text-6xl\",\n        children: \"Overdue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), todoList.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n        todoId: todo._id,\n        updatedAt: todo.updatedAt,\n        createdAt: todo.createdAt,\n        todoText: todo.todoText,\n        isMobile: isMobile,\n        todoCompleted: todo.todoCompleted\n      }, todo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OverdueList, \"Y4L1J0XDLZrA3RnRDa15KBoJPE8=\");\n\n_c = OverdueList;\n\nvar _c;\n\n$RefreshReg$(_c, \"OverdueList\");","map":{"version":3,"sources":["/Users/sean/repos/timetable/timetable/src/components/TodoList/OverdueList.jsx"],"names":["React","useState","useEffect","Todo","axios","OverdueList","user","isMobile","todoList","setTodoList","haveOverdue","setHaveOverdue","yesterday","Date","setDate","getDate","console","log","toISOString","get","then","response","data","reverse","filter","todo","createdAt","todoCompleted","length","map","_id","updatedAt","todoText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,WAAT,CAAsB;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAtB,EAAuC;AAAA;;AAClD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AACAD,IAAAA,SAAS,CAACE,OAAV,CAAkBF,SAAS,CAACG,OAAV,KAAsB,CAAxC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACM,WAAV,EAAZ;AAEDd,IAAAA,KAAK,CAACe,GAAN,CAAU,sDAAV,EACMC,IADN,CACWC,QAAQ,IAAI;AACdZ,MAAAA,WAAW,CAACY,QAAQ,CAACC,IAAT,CAAcC,OAAd,GAAwBC,MAAxB,CAA+BC,IAAI,IAAIA,IAAI,CAACC,SAAL,GAAiBd,SAAS,CAACM,WAAV,EAAjB,IAA4CO,IAAI,CAACE,aAAL,KAAuB,KAA1G,CAAD,CAAX;AACH,KAHN;AAKF,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACI;AAAA,2BACI;AAAS,MAAA,EAAE,EAAC,UAAZ;AAAA,iBACKnB,QAAQ,CAACoB,MAAT,GAAkB,CAAlB,iBAEG;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHR,EAKKpB,QAAQ,CAACqB,GAAT,CAAaJ,IAAI,iBAEd,QAAC,IAAD;AAAqB,QAAA,MAAM,EAAEA,IAAI,CAACK,GAAlC;AAAuC,QAAA,SAAS,EAAEL,IAAI,CAACM,SAAvD;AAAkE,QAAA,SAAS,EAAEN,IAAI,CAACC,SAAlF;AAA6F,QAAA,QAAQ,EAAED,IAAI,CAACO,QAA5G;AAAsH,QAAA,QAAQ,EAAEzB,QAAhI;AAA0I,QAAA,aAAa,EAAEkB,IAAI,CAACE;AAA9J,SAAWF,IAAI,CAACK,GAAhB;AAAA;AAAA;AAAA;AAAA,cAFH,CALL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA/BuBzB,W;;KAAAA,W","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Todo from \"./Todo.jsx\";\nimport axios from \"axios\";\n\nexport default function OverdueList( {user, isMobile}){\n    const [todoList, setTodoList] = useState([]);\n    const [haveOverdue, setHaveOverdue] = useState(false);\n\n    useEffect(() => {\n        const yesterday = new Date();\n        yesterday.setDate(yesterday.getDate() - 1);\n        console.log(yesterday.toISOString());\n\n       axios.get('http://localhost:5000/todos/611e92451c49a231f80a5709') \n            .then(response => {\n                setTodoList(response.data.reverse().filter(todo => todo.createdAt < yesterday.toISOString() && todo.todoCompleted === false));\n            });\n        \n    }, []);    \n\n    return(\n        <div>\n            <section id=\"todolist\">\n                {todoList.length > 0 &&\n\n                    <h2 className=\"text-4xl md:text-6xl\">Overdue</h2>\n                }\n                {todoList.map(todo => (\n                    \n                    <Todo key={todo._id} todoId={todo._id} updatedAt={todo.updatedAt} createdAt={todo.createdAt} todoText={todo.todoText} isMobile={isMobile} todoCompleted={todo.todoCompleted}/>\n                ))}\n            </section>\n        </div>\n    );\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}